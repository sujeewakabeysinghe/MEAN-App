{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".cr{\\r\\n  margin-top: 3%;\\r\\n  margin-left: 25%;\\r\\n  margin-right: 25%;\\r\\n}\\r\\n\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"cr\\\">\\n  <ng-flash-message></ng-flash-message>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule,Routes } from '@angular/router'; //imported router modules and add it into imports\nimport { FormsModule } from '@angular/forms'; //imported form modules and add it into imports\nimport { HttpClientModule } from '@angular/common/http'; //imported this for send data to backend\nimport { HttpModule } from '@angular/http'; //imported this for send data to backend\nimport { NgFlashMessagesModule } from 'ng-flash-messages';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nimport { AuthService } from './services/auth.service';//imported auth service and add it into providers\nimport { AuthGuard } from './services/auth.guard'; //imported auth guard and add it into providers\n\nconst AppRoutes:Routes=[\n  {path:'home',component:HomeComponent},\n  {path:'login',component:LoginComponent},\n  {path:'register',component:RegisterComponent},\n  {path:'profile',component:ProfileComponent,canActivate: [AuthGuard]}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    RegisterComponent,\n    LoginComponent,\n    HomeComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    RouterModule.forRoot(AppRoutes),\n    HttpClientModule,\n    HttpModule,\n    NgFlashMessagesModule.forRoot()\n  ],\n  providers: [\n    AuthService,\n    AuthGuard\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<legend>Login</legend>\\n<form (submit)=\\\"loginData()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"col-form-label\\\" for=\\\"inputDefault\\\">E-Mail</label>\\n    <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"E-Mail\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" required>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"col-form-label\\\" for=\\\"inputDefault\\\">Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" required>\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service'; //imported auth service\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport { Router } from '@angular/router'; //imported router for navigate to login form\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email:string;\n  password:string;\n\n  constructor(\n    private authservice:AuthService, //added auth service\n    private flashmessage:NgFlashMessageService,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  loginData(){\n    const user={\n      email:this.email,\n      password:this.password\n    }\n    //console.log(user);\n    this.authservice.loguser(user).subscribe(res=>{\n      //console.log(res);\n      if(res.state){\n        this.flashmessage.showFlashMessage({\n          messages: [res.msg],\n          dismissible: false,\n          timeout: 2000,\n          type: 'success'\n        });\n        this.authservice.storeuser(res.token);\n        this.router.navigate(['./profile']);\n      }\n      else{\n        this.flashmessage.showFlashMessage({\n          messages: [res.msg],\n          dismissible: false,\n          timeout: 2000,\n          type: 'warning'\n        });\n        this.router.navigate(['./login']);\n      }\n\n    }); //passed the object to auth service\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\" routerLink=\\\"/home\\\">MEAN App</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!authservice.loggedin()\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/register\\\">Register</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!authservice.loggedin()\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/login\\\">Login</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authservice.loggedin()\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/profile\\\">Profile</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authservice.loggedin()\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/login\\\" (click)=\\\"logout()\\\">Logout</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service'; //imported auth service\nimport { NgFlashMessageService } from 'ng-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    public authservice:AuthService, //added auth service\n    private flashmessage:NgFlashMessageService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  logout(){\n    this.authservice.logoutuser();\n    this.flashmessage.showFlashMessage({\n      messages: [\"you are out!\"],\n      dismissible: false,\n      timeout: 2000,\n      type: 'success'\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"user\\\">\\n  <h2>{{user.username}}</h2>\\n  <hr>\\n  <h4>{{user.name}}</h4>\\n  <h4>{{user.email}}</h4>\\n</div>\\n<div *ngIf=\\\"!user\\\">\\n  <h2 style=\\\"text-align: center;\\\">Please Login!</h2>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service'; //imported auth service\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user:any;\n\n  constructor(\n    private authservice:AuthService, //added auth service\n  ) { }\n\n  ngOnInit() {\n    this.authservice.getuser().subscribe(res=>{\n      this.user=res.user;\n    });\n  }\n\n}\n","module.exports = \"\\r\\n\"","module.exports = \"<legend>Register</legend>\\n<form (submit)=\\\"registerData()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"col-form-label\\\" for=\\\"inputDefault\\\">User Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"User Name\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\" required>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"col-form-label\\\" for=\\\"inputDefault\\\">Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\"  name=\\\"name\\\" [(ngModel)]=\\\"name\\\" required>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"col-form-label\\\" for=\\\"inputDefault\\\">E-Mail</label>\\n    <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"E-Mail\\\"  name=\\\"email\\\" [(ngModel)]=\\\"email\\\" required>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"col-form-label\\\" for=\\\"inputDefault\\\">Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\"  name=\\\"password\\\" [(ngModel)]=\\\"password\\\" required>\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n</form>\\n<br>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service'; //imported auth service\n//import { observable } from 'rxjs';\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport { Router } from '@angular/router'; //imported router for navigate to login form\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  username:string;\n  name:string;\n  email:string;\n  password:string;\n\n  constructor(\n    private authservice:AuthService, //added auth service\n    private flashmessage:NgFlashMessageService,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  registerData(){\n    const user={\n      username:this.username,\n      name:this.name,\n      email:this.email,\n      password:this.password\n    }\n    //console.log(user);\n    this.authservice.adduser(user).subscribe(res=>{\n      //console.log(res);\n      if(res.state){\n        this.flashmessage.showFlashMessage({\n          messages: [res.msg],\n          dismissible: false,\n          timeout: 2000,\n          type: 'success'\n        });\n        this.router.navigate(['./login']);\n      }\n      else{\n        this.flashmessage.showFlashMessage({\n          messages: [res.msg],\n          dismissible: false,\n          timeout: 2000,\n          type: 'warning'\n        });\n        this.router.navigate(['./home']);\n      }\n    }); //passed the object to auth service\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CanActivate } from '@angular/router';\r\nimport { AuthService } from './auth.service'; //changed here with my naming\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private auth: AuthService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if(this.auth.loggedin()) { //changed here with my naming\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['unauthorized']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Http,Headers } from '@angular/http';\nimport { map } from 'rxjs/operators'; //may need to install this also rxjs-compat\nimport { tokenNotExpired } from 'angular2-jwt'; //imported to know whether token expiration\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  constructor(\n    private http:Http, //added http module\n  ) { }\n\n  adduser(user:any){\n    //console.log(user);\n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('http://localhost:3000/users/register',user,{headers:headers}).pipe(map(res=>res.json()));\n  }\n\n  loguser(user:any){\n    //console.log(user);\n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('http://localhost:3000/users/login',user,{headers:headers}).pipe(map(res=>res.json()));\n  }\n\n  getuser(){\n    //console.log(user);\n    //console.log(this.fetchuser());\n    //const token=localStorage.getItem('Token'); //you can use this directly here without calling function\n    let headers=new Headers();\n    headers.append('Authorization',this.fetchuser());\n    return this.http.get('http://localhost:3000/users/profile',{headers:headers}).pipe(map(res=>res.json()));\n  }\n\n  storeuser(token:any){\n    localStorage.setItem('Token',token);\n    //localStorage.setItem('User',JSON.stringify(user));\n  }\n\n  fetchuser():string{\n    const token=localStorage.getItem('Token');\n    return token;\n  }\n\n  logoutuser(){\n    localStorage.clear();\n  }\n\n  loggedin(){\n  return tokenNotExpired('Token'); //ser your token name on Local storage\n}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}